name: Build and Push Image Workflow

on:
  workflow_call:
    inputs:
      dockerfile_path:
        description: Path to the Dockerfile
        required: true
        type: string
      ecr_repository:
        required: true
        type: string
        description: "ECR repository name"

jobs:
  build:
    name: Build and Push Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-image-tag.outputs.image-tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      - name: Set image tag output
        id: set-image-tag
        if: github.event_name != 'pull_request'
        run: echo "image-tag=${{ github.sha }}" >> "$GITHUB_OUTPUT"
